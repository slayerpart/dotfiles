{"version":3,"sources":["../src/html.transform.js"],"names":["HTMLTransform","mimetype","data","document","range","createRange","createContextualFragment","error","console","warn","div","createElement","innerHTML"],"mappings":"AAAA;;AAEA;;;;;;;;;;;;;;;;QAYgBA,a,GAAAA,a;AAAT,SAASA,aAAT,CAAwBC,QAAxB,EAAkCC,IAAlC,EAAwCC,QAAxC,EAAkD;AACvD,MAAI;AACF,QAAIC,QAAQD,SAASE,WAAT,EAAZ;AACA,WAAOD,MAAME,wBAAN,CAA+BJ,IAA/B,CAAP;AACD,GAHD,CAGE,OAAOK,KAAP,EAAc;AACdC,YAAQC,IAAR,CAAa,wCACA,qDADb;AAEA,QAAIC,MAAMP,SAASQ,aAAT,CAAuB,KAAvB,CAAV;AACAD,QAAIE,SAAJ,GAAgBV,IAAhB;AACA,WAAOQ,GAAP;AACD;AAEF;AACDV,cAAcC,QAAd,GAAyB,WAAzB","file":"html.transform.js","sourcesContent":["'use strict'\n\n/**\n  * Converts data with an HTML mimetype to an HTML div element with the\n  * appropriate formatting.\n  *\n  * @param {string} mimetype - The mimetype of the data to be transformed,\n  * it is unused by this function but included for a common API.\n  * @param {string} data - The html text to be transformed.\n  * @param {Document} document - A Document Object Model to be used for\n  * creating an html div element.\n  * @return {HTMLElement} - A div element for the containing the transformed\n  * html.\n  */\nexport function HTMLTransform (mimetype, data, document) {\n  try {\n    var range = document.createRange()\n    return range.createContextualFragment(data)\n  } catch (error) {\n    console.warn('Environment does not support Range ' +\n                 'createContextualFragment, falling back on innerHTML')\n    var div = document.createElement('div')\n    div.innerHTML = data\n    return div\n  }\n\n}\nHTMLTransform.mimetype = 'text/html'\n"]}